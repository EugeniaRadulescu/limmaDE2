% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pipeLIMMA.contrasts.R
\name{pipeLIMMA.contrasts}
\alias{pipeLIMMA.contrasts}
\title{A pipeline for LIMMA via a contrast marix.}
\usage{
pipeLIMMA.contrasts(counts, design, contrast.matrix, block = NULL,
  printSig = TRUE, makePlots = TRUE, verbose = TRUE, ...)
}
\arguments{
\item{counts}{A count matrix}

\item{design}{A design matrix, usually created by a call from "model.matrix"}

\item{contrast.matrix}{A matrix of contrasts, usually created by a call
from limma:makeContrasts}

\item{block}{A string that represents an individual that was repeatedly
measured, if NULL, runs the analysis without a blocking / duplicate correlation factor}

\item{printSig}{Logical, should statistical significance for each contrast be printed?}

\item{makePlots}{Logical, should p-value and q-value histograms be plotted?}

\item{verbose}{Logical, return progress updates?}

\item{...}{additional arguments passed on to lmfit, for example a vector of sample weights}
}
\value{
a dataframe with the statistics for each contrast and the overall f-test
}
\description{
\code{pipeLIMMA.contrasts} Run a pipeline of LIMMA functions for
differential gene expression using a contrast matrix. Implementation is more
restrictive than pipeLIMMA and forces voom w/ quality weights and geneIDs
to be rownames of counts matrix.
}
\details{
This function runs the following pipeline:
\itemize{
 \item{1. }{calculate normalization factors via edgeR::calcNormFactors}
 \item{2. }{Run limma::voom transformation}
 \item{3. }{Run limma:lmFit linear modeling}
 \item{4. }{Run limma:contrasts.fit contrast tests}
 \item{5. }{Run limma::ebayes statistical modeling}
 \item{6. }{Ouput statistics and other data}
}
}
\examples{
data(kidney)
counts<-kidney$counts
counts<-counts[sample(1:nrow(counts),1000),]
info<-data.frame(rep=kidney$replic, treatment=kidney$treatment)
f<-gsub("-","_",info$treatment)

design <- model.matrix(~0+f)
contrast.matrix<-makeContrasts(fNon_Tumor-fTumor, levels=design)
lim.contrasts<-pipeLIMMA.contrasts(counts=counts, design=design, block=info$rep,
       contrast.matrix=contrast.matrix)
}

